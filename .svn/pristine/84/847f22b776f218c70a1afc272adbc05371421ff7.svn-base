const cPath = document.body.dataset.contextPath;

$(document).ready(function() {
    var currentDate = new Date();
    var formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');
    $('.ymd').text(formattedDate);
    // 현재 페이지 URL 가져오기
    var currentUrl = window.location.href;
    console.log('현재 페이지 URL:', currentUrl);

    var queryString = currentUrl.split('?')[1]; // URL에서 '?' 이후의 부분을 추출

    var checkedItems;
    if (queryString) {
        var queryParams = queryString.split('&');
        console.log('쿼리 파라미터 배열:', queryParams);
        
        var data = {};
        
        queryParams.forEach(function(param) {
            var parts = param.split('=');
            var key = decodeURIComponent(parts[0]); 
            var value = decodeURIComponent(parts.slice(1).join('=')); 
            
            data[key] = value;
        });

        console.log('data:', data);
        
        checkedItems = data.checkedItems; 
        console.log('checkedItems:', checkedItems); 
    } else {
        console.log('쿼리 파라미터가 없습니다.');
    }

    let url = currentUrl;

    console.log('checkedItems:', checkedItems); 
    $(document).ready(function() {
	    $.ajax({
	        url: './rqstListadd.do', 
	        method: 'POST', 
	        data: { checkedItems: checkedItems }, // 쿼리 파라미터로 checkedItems 전송
	        dataType: 'json',
	        success: function(jsonObj) {
	            console.log("jsonObj:",jsonObj);
	            let fxtrs = jsonObj.fxtrsList;
	            
	            let $fxRqstListBody = $("#fxRqstListBody");
	            let fxrqstTags = '';
	            
				let fxTotalAmnt;
	
				$('.hkp-dpm-Nm').text(jsonObj.fxRqstEmp.empNm + "  부장");
				$('.hkp-dpm-Nm').each(function() {
				    var empNo = jsonObj.fxRqstEmp.empNo; // jsonObj.fxRqstEmp.empNo로부터 값을 가져옴
				    $(this).attr('id', empNo); // 요소에 id 속성을 추가하고 값을 설정
					$('#empRqNo').attr('value',empNo);
				});
			
				
	            fxtrs.forEach(function(fxtrs) {
	                console.log(fxtrs);
	                
	                txrqstTags = `
	                    <tr class="fxtrsRqstList">
	                        <td class="fxDelete">
	                            <i class="fas fa-times" style="vertical-align: middle;"></i>
	                        </td>
	                        <td class="fxCd">${fxtrs.fxCd}</td>
	                        <td >${fxtrs.fxNm}</td>
	                        <td class="presCnt">${fxtrs.fxPresCnt}</td>
	                        <td class="fxTtrtnCnt">${fxtrs.fxTtrtnCnt}</td>
	                        <td class="fxUnit">${fxtrs.fxUnit}</td>
	                        <td>
	                            <input type="number" class="inpWidth fxudCnt">
	                        </td>
	                        <td class="totalCnt"></td>
	                        <td class="totalAmnt"></td>
							<input type="hidden" class="amnt" value="${fxtrs.fxAmnt}">
	                    </tr>
	                `;         
					
	
	                $fxRqstListBody.append(txrqstTags);
	            });
	
				totalAmntTags = `
					<tr>
						<th colspan="5"> 총 가격</th>
						<td colspan="4" class="fxTotalAmnt">0</td>
					</tr>				
				`;					
					
				$fxRqstListBody.append(totalAmntTags);         
	
	            $(document).on('click', '.fxDelete', function() {
	                $(this).closest('tr').remove(); // 부모 tr 요소를 찾아서 제거합니다.
	            });
	
	            // ajax 성공 이후에 .fxudCnt 요소에 대한 이벤트 리스너 추가
	            $('.fxudCnt').on('input', function(){
	                var inputVal = $(this).val();
	                var fxTtrtnCnt = $(this).closest('tr').find('.fxUnit').text();
	                var totalVal = inputVal * fxTtrtnCnt;
	                $(this).closest('tr').find('.totalCnt').text(totalVal);
	
	                var fxAmnt = $(this).closest('tr').find('input.amnt').val();
	
	                console.log(fxAmnt);
	                var totalAmnt = inputVal * fxAmnt;
	                
	                $(this).closest('tr').find('.totalAmnt').text(totalAmnt);
	
					fxTotalAmnt = 0;
					$('.totalAmnt').each(function() {
	        			var totalAmntText = $(this).text();
				        var totalAmntValue = parseFloat(totalAmntText);
				        if (!isNaN(totalAmntValue)) {
				            fxTotalAmnt += totalAmntValue;
				        }
						$('.fxTotalAmnt').text(fxTotalAmnt);
						console.log("fxTotalAmnt:",fxTotalAmnt)
				    });
	
	            });
	        },
	        error: function(xhr, status, error) {
	            // 요청이 실패했을 때 수행할 작업
	            console.error('요청 실패:', status, error);
	        }
	    });
	});

});

function myclick(){
	
	console.log("제출 누름");

	$('.inpWidth').each(function() {
        if ($(this).val() === '') {
            console.log('입력란이 비어 있습니다.');
        }
    });

	var fxtrsData = []; 
	
	let rqstNo =  $('.rqstNo').text(); //요청일련번호
	let ymd =  $('.ymd').text(); //요청일련번호
	let empNo = $('.empNm').attr('id') // 요청자 사번
	let fxTotalAmnt = $('.fxTotalAmnt').text(); // 총가격
	let empRqNo = $('.hkp-dpm-Nm').attr('id') // 요청결재자 사번
	empRqNo = empRqNo.replace('부장', '');
	
	console.log(rqstNo,empNo,fxTotalAmnt,empRqNo)
	
	$('.fxtrsRqstList').each(function() {
	    let fxCd = $(this).find('.fxCd').text(); //비품코드
	    let fxudCnt = $(this).find('.fxudCnt').val(); // 수량
	    let totalAmnt = $(this).find('.totalAmnt').text(); // 비품별 총 가격
	
	    var fxItem = {
	        rqstNo: rqstNo,
	        empNo: empNo,
	        fxTotalAmnt: fxTotalAmnt,
	        empRqNo: empRqNo,
			ymd:ymd,

			fxCd: fxCd,
			fxudCnt : fxudCnt,
			totalAmnt : totalAmnt,

	    };
	    console.log("fxItem",fxItem);
	 	fxtrsData.push(fxItem);
    });
    console.log("fxtrsData",fxtrsData);
    
	let url = cPath + "/emp/pms/fxtrs/fxtrsRqst";

	$.ajax({
		url: url,
		type: "POST",
		contentType: "application/json", // JSON 형식으로 데이터를 전송
  		data: JSON.stringify({"fxtrsData": fxtrsData}), // 데이터를 JSON 문자열로 변환하여 전송
	    success: function(response) {
	        // 요청이 성공한 경우의 처리
	    	console.log("요청이 성공적으로 처리되었습니다.");
	    	console.log(response); // 서버에서 받은 응답 확인
 			window.location.href = response;
//			alert("성공");
	  	},
	  	error: function(xhr, status, error) {
	     	 // 요청이 실패한 경우의 처리
	      	console.error("요청을 처리하는 도중 오류가 발생했습니다.");
	      	console.error(error); // 발생한 오류 출력
	  	}
	});
};