/**
 * 
 */
const cPath = document.body.dataset.contextPath;

const checkFlag = false;

document.addEventListener("DOMContentLoaded",()=>{
	cstHp.addEventListener("keyup", function(e){
		convertPhoneNumber(e.target);
	});
	mberHomeTel.addEventListener("keyup", function(e){
		convertPhoneNumber(e.target);
	});
});

function checkMberId(){
	let mberId = document.getElementById("mberId").value;
	
	let jsonData = {
		'mberId':mberId
	};
	fetch(cPath+'/auth/idvalid.do', {
		method:'POST',
		headers:{
			"Content-Type":"application/json",
			"Accept":"application/json"
		},
		body:JSON.stringify(jsonData)
	}).then(resp=>{
		if(resp.ok){
			return resp.json();
		}else{
			throw new Error("오류", {cause:resp})
		}
	}).then(jsonObj=>{
		let message = '';
		checkFlag = true;
		console.log(jsonObj)
		if(jsonObj['check']){
			message = '사용 가능한 아이디입니다.'
		}else{
			message = '중복된 아이디입니다.'
		}
		checkResult.innerHTML = message;
	})
}

joinForm.addEventListener("submit", ()=>{
	if(!checkResult){
		event.preventDefault();
		console.log('아이디 검증 먼저하세요')
		return false;
	}
});

function execDaumPostcode() {
    new daum.Postcode({
        oncomplete: function(data) {
            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

            // 각 주소의 노출 규칙에 따라 주소를 조합한다.
            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
            var addr = ''; // 주소 변수
            var extraAddr = ''; // 참고항목 변수

            //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
            if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                addr = data.roadAddress;
            } else { // 사용자가 지번 주소를 선택했을 경우(J)
                addr = data.jibunAddress;
            }

            // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
            if(data.userSelectedType === 'R'){
                // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                    extraAddr += data.bname;
                }
                // 건물명이 있고, 공동주택일 경우 추가한다.
                if(data.buildingName !== '' && data.apartment === 'Y'){
                    extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                }
            } else {

            }

            // 우편번호와 주소 정보를 해당 필드에 넣는다.
            document.getElementById('postcode').value = data.zonecode;
            document.getElementById("mberAddr").value = addr;
            // 커서를 상세주소 필드로 이동한다.
            document.getElementById("mberDetailAddress").focus();
        }
    }).open();
}