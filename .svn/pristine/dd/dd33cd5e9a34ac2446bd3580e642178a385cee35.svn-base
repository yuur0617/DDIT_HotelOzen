<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mybatis.mappers.EmpNoticeMapper">

	<!-- <select> -->
	<!-- select emp_notice_seq.nextval -->
	<!-- from dual -->
	<!-- </select> -->


	<insert id="insert" parameterType="EmpNoticeVO">
		<!-- <selectKey keyProperty="empNtNo" resultType="string" order="before"> -->

		<!-- </selectKey> -->
		INSERT INTO TB_EMP_NOTICE (
		EMP_NT_NO
		, EMP_NO
		, EMP_NT_NM
		, EMP_NT_YMD
		, EMP_NT_CN
		, EMP_NT_CLASSIFICATION
		) VALUES (
		#{empNtNo,jdbcType=VARCHAR}
		, #{empNo,jdbcType=VARCHAR}
		, #{empNtNm,jdbcType=VARCHAR}
		, SYSDATE
		, #{empNtCn,jdbcType=CLOB}
		, #{empNtClassification,jdbcType=VARCHAR}
		)

	</insert>

	<resultMap type="EmpNoticeVO" id="empNtInsertMap" autoMapping="true">
		<id property="empNtNo" column="EMP_NT_NO"/>
		<collection property="atchList" ofType="AtchmnflEmpNoticeVO">
			<id property="attNo" column="ATT_NO"/>
			<result property="empNtNo" column="EMP_NT_NO"/>
			<result property="atcEmpNtUuid" column="ATC_EMP_NT_UUID"/>
			<result property="atcEmpFileNm" column="ATC_EMP_FILE_NM"/>
		</collection>
	</resultMap>
	<select id="select" parameterType="string"
		resultMap="empNtInsertMap">
		SELECT
		EMP_NT_NO
		, EMP_NO
		, (SELECT EMP_NM FROM TB_EMP WHERE TB_EMP.EMP_NO = TB_EMP_NOTICE.EMP_NO) AS EMP_NM
        , (SELECT 
                CASE WHEN TB_EMP.EMP_DEPT ='FTO' THEN '프론트오피스부'
                WHEN TB_EMP.EMP_DEPT ='HKP' THEN '하우스키핑부'
                WHEN TB_EMP.EMP_DEPT ='FMT' THEN '시설관리부'
                WHEN TB_EMP.EMP_DEPT ='CRM' THEN '고객관리부'
                WHEN TB_EMP.EMP_DEPT ='POS' THEN '재무부'
                WHEN TB_EMP.EMP_DEPT ='HRM' THEN '인사부'
                ELSE '부서미배정'
                END AS EMP_DEPT
            FROM TB_EMP WHERE TB_EMP.EMP_NO = TB_EMP_NOTICE.EMP_NO) AS EMP_DEPT
        , (SELECT EMP_EML FROM TB_EMP WHERE TB_EMP.EMP_NO = TB_EMP_NOTICE.EMP_NO) AS EMP_EML
		, EMP_NT_NM
		, EMP_NT_YMD
		, EMP_NT_CNT
		, EMP_NT_CN
		, EMP_NT_CLASSIFICATION
		, ATT_NO
		, ATC_EMP_NT_UUID
		, ATC_EMP_FILE_NM
		FROM
		TB_EMP_NOTICE LEFT OUTER JOIN TB_ATCHMNFL_EMP_NOTICE USING(EMP_NT_NO)
		WHERE EMP_NT_NO = #{empNtNo,jdbcType=VARCHAR}
	</select>

	<sql id="searchFrag">
		<!-- <trim prefix="WHERE" suffixOverrides="AND"> -->
		<!-- <if test="not detailCondition.empty"> -->
		<!-- <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.empNtNm)"> -->
		<!-- INSTR(EMP_NT_NM, TRIM(#{detailCondition.empNtNm})) > 0 AND -->
		<!-- </if> -->
		<!-- <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.empNo)"> -->
		<!-- INSTR(EMP_NO, TRIM(#{detailCondition.empNo})) > 0 AND -->
		<!-- </if> -->
		<!-- <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.empNtCn)"> -->
		<!-- INSTR(EMP_NT_CN, TRIM(#{detailCondition.empNtCn})) > 0 AND -->
		<!-- </if> -->
		<!-- </if> -->
		<!-- </trim> -->

		<!-- <where> -->

		<trim prefix="WHERE" suffixOverrides="AND">
			<if
				test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.selectOneSearchWord)">
				EMP_NT_CLASSIFICATION = '${simpleCondition.selectOneSearchWord}' AND
			</if>

			<if
				test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
				<choose>
					<when test="simpleCondition.searchType eq 'empNtNm'">
						INSTR(EMP_NT_NM, TRIM(#{simpleCondition.searchWord})) > 0
					</when>
					<when test="simpleCondition.searchType eq 'empNm'">
						INSTR(EMP_NM, TRIM(#{simpleCondition.searchWord})) > 0
					</when>
					<when test="simpleCondition.searchType eq 'empNtCn'">
						INSTR(EMP_NT_CN, TRIM(#{simpleCondition.searchWord})) > 0
					</when>
					<otherwise>
						(
							INSTR(EMP_NT_NM, TRIM(#{simpleCondition.searchWord})) > 0
							OR
							INSTR(EMP_NM, TRIM(#{simpleCondition.searchWord})) > 0
							OR
							INSTR(EMP_NT_CN, TRIM(#{simpleCondition.searchWord})) > 0
						)
					</otherwise>
				</choose>
			</if>
		</trim>



		<!-- <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)"> -->
		<!-- <choose> -->
		<!-- <when test="simpleCondition.searchType eq 'empNtNm'"> -->
		<!-- INSTR(EMP_NT_NM, TRIM(#{simpleCondition.searchWord})) > 0 -->
		<!-- </when> -->
		<!-- <when test="simpleCondition.searchType eq 'empNm'"> -->
		<!-- INSTR(EMP_NM, TRIM(#{simpleCondition.searchWord})) > 0 -->
		<!-- </when> -->
		<!-- <when test="simpleCondition.searchType eq 'empNtCn'"> -->
		<!-- INSTR(EMP_NT_CN, TRIM(#{simpleCondition.searchWord})) > 0 -->
		<!-- </when> -->
		<!-- <otherwise> -->
		<!-- INSTR(EMP_NT_NM, TRIM(#{simpleCondition.searchWord})) > 0 -->
		<!-- OR -->
		<!-- INSTR(EMP_NM, TRIM(#{simpleCondition.searchWord})) > 0 -->
		<!-- OR -->
		<!-- INSTR(EMP_NT_CN, TRIM(#{simpleCondition.searchWord})) > 0 -->
		<!-- </otherwise> -->
		<!-- </choose> -->
		<!-- </if> -->
		<!-- </where> -->
	</sql>



	<select id="selectTotalRecord" parameterType="PaginationInfo"
		resultType="int">
		SELECT COUNT(*)
		FROM TB_EMP_NOTICE
		INNER JOIN TB_EMP USING(EMP_NO)
		<include refid="searchFrag" />
	</select>



	<resultMap type="EmpNoticeVO" id="empNoticeMap"
		autoMapping="true">
		<id property="empNtNo" column="EMP_NT_NO" />
		<association property="hrmEmp" javaType="HrmEmpVO"
			autoMapping="true">
			<id property="empNo" column="EMP_NO" />
		</association>
		<collection property="atchList" ofType="AtchmnflEmpNoticeVO">
			<id property="attNo" column="ATT_NO"/>
			<result property="empNtNo" column="EMP_NT_NO"/>
			<result property="atcEmpNtUuid" column="ATC_EMP_NT_UUID"/>
			<result property="atcEmpFileNm" column="ATC_EMP_FILE_NM"/>
		</collection>
	</resultMap>

	<select id="selectList" parameterType="PaginationInfo"
		resultMap="empNoticeMap">
		SELECT B.*
		FROM (
			SELECT A.*, ROWNUM RNUM
			FROM (
			SELECT
				EMP_NT_NO
				, EMP_NO
				, EMP_NM
				, EMP_NT_NM
				, EMP_NT_YMD
				, EMP_NT_CNT
				, EMP_NT_CN
				, EMP_NT_CLASSIFICATION
				, ATT_NO
				, ATC_EMP_NT_UUID
				, ATC_EMP_FILE_NM
				FROM TB_EMP_NOTICE
				INNER JOIN TB_EMP USING(EMP_NO)
				LEFT OUTER JOIN TB_ATCHMNFL_EMP_NOTICE USING(EMP_NT_NO)
				<include refid="searchFrag" />
				ORDER BY EMP_NT_YMD DESC
			) A
		) B
		<where>
			<if test="startRow gt 0 and endRow gt 0">
				RNUM BETWEEN #{startRow} AND #{endRow}
			</if>
		</where>
	</select>

	<select id="selectNewEmpNtNo" resultType="string">
		SELECT 
			<![CDATA[
			'ENT'|| CASE WHEN NUM < 10 THEN '000'|| NUM
	        WHEN NUM >= 10 AND NUM < 100 THEN '00'|| NUM
	        WHEN NUM >= 100 AND NUM <1000 THEN '0'|| NUM
	        WHEN NUM >= 1000 THEN '' || NUM
	        ]]>
		END AS CODE
		FROM (
		SELECT MAX(TO_NUMBER(RESULT,'9999')+1) NUM
		FROM(
		SELECT EMP_NT_NO, REGEXP_SUBSTR(EMP_NT_NO,'[1-9]+[0-9]*') AS RESULT
		FROM TB_EMP_NOTICE))
	</select>

	<update id="update" parameterType="EmpNoticeVO">
		UPDATE TB_EMP_NOTICE
		SET
		EMP_NT_NM = #{empNtNm,jdbcType=VARCHAR}
		, EMP_NT_CN = #{empNtCn,jdbcType=CLOB}
		, EMP_NT_CLASSIFICATION = #{empNtClassification,jdbcType=VARCHAR}
		WHERE EMP_NT_NO = #{empNtNo}
	</update>


	<delete id="delete" parameterType="string">
		DELETE FROM TB_EMP_NOTICE
		WHERE EMP_NT_NO = #{empNtNo,jdbcType=VARCHAR}
	</delete>

	<update id="updateCnt" parameterType="string">
		UPDATE TB_EMP_NOTICE
		SET
		EMP_NT_CNT = EMP_NT_CNT+1
		WHERE EMP_NT_NO = #{empNtNo}
	</update>

</mapper>